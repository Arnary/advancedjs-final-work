{"version":3,"file":"main-00c80ec2.js","sources":["../../src/js/utils/axiosWrapper.js","../../src/js/main.js"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://your-energy.b.goit.study/api';\n\nexport class axiosWrapper {\n  constructor() {\n    this.axios = axios;\n  }\n\n  get(url = '', urlParams = {}) {\n    return this.request('GET', url, { params: urlParams });\n  }\n\n  post(url = '', data = {}) {\n    return this.request('POST', url, { data });\n  }\n\n  patch(url = '', data = {}) {\n    return this.request('PATCH', url, { data });\n  }\n\n  request(method, url, config) {\n    if ('' === url || !url) throw new Error('url is empty');\n    if (!typeof url === 'string') url = String(url);\n    if (url.substring(0, 1) !== '/') url = `/${url}`;\n\n    const { params = {}, data } = config;\n    const urlParams = new URLSearchParams(params).toString();\n\n    return this.axios\n      .request(`${BASE_URL}${url}${urlParams ? `?${urlParams}` : ''}`, { method, data })\n      .then(response => {\n        const { status, data } = response;\n        if (status >= 200 && status < 300) return data;\n        throw new Error();\n      })\n      .catch(error => {\n        throw error;\n      });\n  }\n\n  describeError(error) {\n    if (error.response) {\n      const { status } = error.response;\n      if (status === 400) return 'Invalid request';\n      if (status === 404) return 'Not found';\n      if (status === 409) return 'Already exists';\n      if (status === 500) return 'Server error';\n      return 'Unknown error occurred';\n    } else if (error.request) {\n      return 'No response from server';\n    }\n    return 'Something went wrong';\n  }\n}\n","import { axiosWrapper } from './utils/axiosWrapper';\n\nconst axios = new axiosWrapper();\nconst params = { bodypart: 'cardio', page: 1, limit: 10 };\n\naxios\n  .get('exercises', params)\n  .then(res => console.log(res))\n  .catch(error => {\n    const errorDescription = axios.describeError(error);\n    console.log(errorDescription);\n  });\n"],"names":["BASE_URL","axiosWrapper","axios","url","urlParams","data","method","config","params","response","status","error","res","errorDescription"],"mappings":"+uBACA,MAAMA,EAAW,uCAEV,MAAMC,CAAa,CACxB,aAAc,CACZ,KAAK,MAAQC,CACd,CAED,IAAIC,EAAM,GAAIC,EAAY,CAAA,EAAI,CAC5B,OAAO,KAAK,QAAQ,MAAOD,EAAK,CAAE,OAAQC,CAAS,CAAE,CACtD,CAED,KAAKD,EAAM,GAAIE,EAAO,CAAA,EAAI,CACxB,OAAO,KAAK,QAAQ,OAAQF,EAAK,CAAE,KAAAE,CAAI,CAAE,CAC1C,CAED,MAAMF,EAAM,GAAIE,EAAO,CAAA,EAAI,CACzB,OAAO,KAAK,QAAQ,QAASF,EAAK,CAAE,KAAAE,CAAI,CAAE,CAC3C,CAED,QAAQC,EAAQH,EAAKI,EAAQ,CAC3B,GAAWJ,IAAP,IAAc,CAACA,EAAK,MAAM,IAAI,MAAM,cAAc,EAClD,KAAgB,WAAUA,EAAM,OAAOA,CAAG,GAC1CA,EAAI,UAAU,EAAG,CAAC,IAAM,MAAKA,EAAM,IAAIA,CAAG,IAE9C,KAAM,CAAE,OAAAK,EAAS,CAAA,EAAI,KAAAH,CAAI,EAAKE,EACxBH,EAAY,IAAI,gBAAgBI,CAAM,EAAE,SAAQ,EAEtD,OAAO,KAAK,MACT,QAAQ,GAAGR,CAAQ,GAAGG,CAAG,GAAGC,EAAY,IAAIA,CAAS,GAAK,EAAE,GAAI,CAAE,OAAAE,EAAQ,KAAAD,CAAI,CAAE,EAChF,KAAKI,GAAY,CAChB,KAAM,CAAE,OAAAC,EAAQ,KAAAL,CAAM,EAAGI,EACzB,GAAIC,GAAU,KAAOA,EAAS,IAAK,OAAOL,EAC1C,MAAM,IAAI,KAClB,CAAO,EACA,MAAMM,GAAS,CACd,MAAMA,CACd,CAAO,CACJ,CAED,cAAcA,EAAO,CACnB,GAAIA,EAAM,SAAU,CAClB,KAAM,CAAE,OAAAD,CAAM,EAAKC,EAAM,SACzB,OAAID,IAAW,IAAY,kBACvBA,IAAW,IAAY,YACvBA,IAAW,IAAY,iBACvBA,IAAW,IAAY,eACpB,wBACb,SAAeC,EAAM,QACf,MAAO,0BAET,MAAO,sBACR,CACH,CCnDA,MAAMT,EAAQ,IAAID,EACZO,EAAS,CAAE,SAAU,SAAU,KAAM,EAAG,MAAO,IAErDN,EACG,IAAI,YAAaM,CAAM,EACvB,KAAKI,GAAO,QAAQ,IAAIA,CAAG,CAAC,EAC5B,MAAMD,GAAS,CACd,MAAME,EAAmBX,EAAM,cAAcS,CAAK,EAClD,QAAQ,IAAIE,CAAgB,CAChC,CAAG"}